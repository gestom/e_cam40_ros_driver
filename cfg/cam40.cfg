#! /usr/bin/env python

PACKAGE='e_cam40_ros_driver'
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
#       Name       	  Type      Level Description     Default Min   Max
gen.add("exposure",       int_t,    0,    "Manual exposure", 156,     1, 10000)
gen.add("brightness",       int_t,    0,    "Manual brightness", 10,     1, 40)
gen.add("autoExposure",       bool_t,    0,    "Auto exposure on", True)
gen.add("targetBrightness",       int_t,    0,    "Desired brightness", 128,     0, 255)
gen.add("exposureGain",       double_t,    0,    "Exposure control gain", 1,     0, 5)

image_enum = gen.enum([ gen.const("rgb",      int_t, 0, "RGB image"),
                       gen.const("ir",     int_t, 1, "Infrared image")],
                     "An enum to choose image type")

gen.add("expImageType", int_t, 0, "Image from which average brightness is computed.", 0, 0, 1, edit_method=image_enum)

exit(gen.generate(PACKAGE, "e_cam40_ros_driver", "cam40"))

